import { Directive, EventEmitter, Output } from "@angular/core";
var CtrCompleter = (function () {
    function CtrCompleter() {
        this.selected = new EventEmitter();
        this.highlighted = new EventEmitter();
        this._hasHighlited = false;
        this.hasSelected = false;
        this._cancelBlur = false;
    }
    CtrCompleter.prototype.ngOnInit = function () {
        //
    };
    CtrCompleter.prototype.registerList = function (list) {
        this.list = list;
    };
    CtrCompleter.prototype.registerDropdown = function (dropdown) {
        this.dropdown = dropdown;
    };
    CtrCompleter.prototype.onHighlighted = function (item) {
        this.highlighted.emit(item);
        this._hasHighlited = !!item;
    };
    CtrCompleter.prototype.onSelected = function (item) {
        this.selected.emit(item);
        if (item) {
            this.hasSelected = true;
        }
        this.clear();
    };
    CtrCompleter.prototype.search = function (term) {
        if (this.hasSelected) {
            this.selected.emit(null);
            this.hasSelected = false;
        }
        if (this.list) {
            this.list.search(term);
        }
    };
    CtrCompleter.prototype.clear = function () {
        if (this.dropdown) {
            this.dropdown.clear();
        }
        if (this.list) {
            this.list.clear();
        }
        this._hasHighlited = false;
    };
    CtrCompleter.prototype.selectCurrent = function () {
        if (this.dropdown) {
            this.dropdown.selectCurrent();
        }
    };
    CtrCompleter.prototype.nextRow = function () {
        if (this.dropdown) {
            this.dropdown.nextRow();
        }
    };
    CtrCompleter.prototype.prevRow = function () {
        if (this.dropdown) {
            this.dropdown.prevRow();
        }
    };
    CtrCompleter.prototype.hasHighlited = function () {
        return this._hasHighlited;
    };
    CtrCompleter.prototype.cancelBlur = function (cancel) {
        this._cancelBlur = cancel;
    };
    CtrCompleter.prototype.isCancelBlur = function () {
        return this._cancelBlur;
    };
    return CtrCompleter;
}());
export { CtrCompleter };
CtrCompleter.decorators = [
    { type: Directive, args: [{
                selector: "[ctrCompleter]",
            },] },
];
/** @nocollapse */
CtrCompleter.ctorParameters = function () { return []; };
CtrCompleter.propDecorators = {
    'selected': [{ type: Output },],
    'highlighted': [{ type: Output },],
};
//# sourceMappingURL=ctr-completer.js.map